# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Running tests

          command: mvn clean test -Dsuite="src/test/resources/Lecture_22.xml"

      - run:
          name: Generate allure report
          command: mvn allure:report
          when: always
      - store_test_results:
          path: target/surefire-reports/junitreports
          when: always
      - store_artifacts:
          path: target/site/allure-maven-plugin/
    workflows:
      version: 2
      commit:
        jobs:
          - ui-tests
      periodical:
        triggers:
          - schedule:
              cron: "1 4,8,12 * * *"
              filters:
                branches:
                  only:
                    - master
    jobs:
      - build-and-test